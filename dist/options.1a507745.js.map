{"version":3,"sources":["options/options.ts"],"names":[],"mappings":";AAAA,IAAM,EAAU,SAAS,iBAAoC,WAE7D,OAAO,QAAQ,KAAK,IAAI,WAAY,SAAC,GAE/B,IAAA,EACC,EAAO,SAWV,EAAW,EAAO,UATlB,EAAW,CACT,eAAe,EACf,UAAU,EACV,SAAS,EACT,aAAa,GAEf,OAAO,QAAQ,KAAK,IAAI,CAAE,SAAQ,KAOpC,EAAQ,QAAQ,SAAC,GACT,IAAA,EAAK,EAAO,QAAQ,GAE1B,EAAO,UAAU,OAAO,SAAU,EAAS,IAG5B,EAAO,cAAc,UAC7B,iBAAiB,QAAS,WAEzB,IAAA,GAAY,EAAS,GAC3B,EAAO,UAAU,OAAO,SAAU,GAClC,EAAS,GAAM,EACf,OAAO,QAAQ,KAAK,IAAI,CAAE,SAAQ","file":"options.1a507745.js","sourceRoot":"..","sourcesContent":["const options = document.querySelectorAll<HTMLButtonElement>(\".option\");\r\n\r\nchrome.storage.sync.get(\"settings\", (result) => {\r\n  // get saved settings from storage ,and set default if not available\r\n  let settings;\r\n  if (!result.settings) {\r\n    // set defaults and save\r\n    settings = {\r\n      coinmarketcap: true,\r\n      coingeko: true,\r\n      bscscan: true,\r\n      pancakeswap: true\r\n    };\r\n    chrome.storage.sync.set({ settings });\r\n  } else {\r\n    // set from saved settings\r\n    settings = result.settings;\r\n  }\r\n\r\n  // set options elements to proper state\r\n  options.forEach((option) => {\r\n    const id = option.dataset.id;\r\n    //   add active class based on current settings\r\n    option.classList.toggle(\"active\", settings[id]);\r\n\r\n    //   add click listener to button\r\n    const button = option.querySelector(\"button\");\r\n    button.addEventListener(\"click\", () => {\r\n      //   toggle active state, change class, and save\r\n      const newState = !settings[id];\r\n      option.classList.toggle(\"active\", newState);\r\n      settings[id] = newState;\r\n      chrome.storage.sync.set({ settings });\r\n    });\r\n  });\r\n});\r\n"]}